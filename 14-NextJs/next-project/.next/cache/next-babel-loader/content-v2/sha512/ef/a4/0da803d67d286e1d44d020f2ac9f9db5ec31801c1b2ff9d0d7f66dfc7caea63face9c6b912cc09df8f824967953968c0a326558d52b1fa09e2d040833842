{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/pages/index.js\";\nimport MeetupList from '../components/meetups/MeetupList';\nvar DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n  address: 'Rue de la Bourse, 75001, Paris',\n  description: 'our first french BTC meetup'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n  address: 'Rue de la Liberté, 75001, Paris',\n  description: 'our second french BTC meetup'\n}];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   //send http request and fetch\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n} // export async function getServerSideProps(context) {\n//   // similar to Node JS we have access to req and response objects\n//   //can be a disadvantage if we want to wait for every request\n//   const req = context.req;\n//   const res = context.res;\n//   //code will always run on the server\n//   // we can run operation on credentials\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n//only works in page component files\n//gets called before calling the component function\n//next Js would wait for the data to be loaded and with that we'd load data with the required data\n//can run code which is run on a server, it will never end up on the client side, it's executed during the\n//build process\n\n\n_c = HomePage;\nexport function getStaticProp() {\n  return _getStaticProp.apply(this, arguments);\n}\n\nfunction _getStaticProp() {\n  _getStaticProp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {\n              props: {\n                meetups: DUMMY_MEETUPS\n              },\n              revalidate: 10 // will regenerate the page every 10 seconds (but sometimes it's not enough we want to regenerate every request)\n\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getStaticProp.apply(this, arguments);\n}\n\nexport default HomePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/pages/index.js"],"names":["MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProp","revalidate"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,IAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,gBAFT;AAGEC,EAAAA,KAAK,EACH,qIAJJ;AAKEC,EAAAA,OAAO,EAAE,gCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,iBAFT;AAGEC,EAAAA,KAAK,EACH,qIAJJ;AAKEC,EAAAA,OAAO,EAAE,iCALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB;AACA;AACA;AACA;AACA;AAEA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACA,KAAN,CAAYC;AAAjC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;KA7BSF,Q;AA8BT,gBAAsBG,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6CAME;AACLF,cAAAA,KAAK,EAAE;AAAEC,gBAAAA,OAAO,EAAER;AAAX,eADF;AAELU,cAAAA,UAAU,EAAE,EAFP,CAEW;;AAFX,aANF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,eAAeJ,QAAf","sourcesContent":["import MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETUPS = [\n  {\n    id: 'm1',\n    title: 'A First Meetup',\n    image:\n      'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n    address: 'Rue de la Bourse, 75001, Paris',\n    description: 'our first french BTC meetup',\n  },\n  {\n    id: 'm2',\n    title: 'A Second Meetup',\n    image:\n      'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n    address: 'Rue de la Liberté, 75001, Paris',\n    description: 'our second french BTC meetup',\n  },\n];\n\nfunction HomePage(props) {\n  // const [loadedMeetups, setLoadedMeetups] = useState([]);\n  // useEffect(() => {\n  //   //send http request and fetch\n  //   setLoadedMeetups(DUMMY_MEETUPS);\n  // }, []);\n\n  return <MeetupList meetups={props.props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n//   // similar to Node JS we have access to req and response objects\n//   //can be a disadvantage if we want to wait for every request\n//   const req = context.req;\n//   const res = context.res;\n//   //code will always run on the server\n//   // we can run operation on credentials\n\n//   return {\n//     props: {\n//       meetups: DUMMY_MEETUPS,\n//     },\n//   };\n// }\n\n//only works in page component files\n//gets called before calling the component function\n//next Js would wait for the data to be loaded and with that we'd load data with the required data\n//can run code which is run on a server, it will never end up on the client side, it's executed during the\n//build process\nexport async function getStaticProp() {\n  //fetch data from API, file system\n\n  //awlays need to return an object\n  //issue that we can have here is that if the data changes we would see outdated data unless we rebuild/redeploy\n  //good use case for personal blog for example unless we add the revalidate property unlocking Incremental Static Generation\n  return {\n    props: { meetups: DUMMY_MEETUPS },\n    revalidate: 10, // will regenerate the page every 10 seconds (but sometimes it's not enough we want to regenerate every request)\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}