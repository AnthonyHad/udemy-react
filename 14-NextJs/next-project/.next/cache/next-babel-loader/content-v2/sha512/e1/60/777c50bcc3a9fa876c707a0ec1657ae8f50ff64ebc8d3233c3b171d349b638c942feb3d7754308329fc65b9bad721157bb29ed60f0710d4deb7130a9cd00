{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/pages/[meetupId]/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  //we usually fetch Ids from the database\n  const client = await MongoClient.connect('mongodb+srv://antho:QUDf7pd7u6jM@cluster0.zqmklxs.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    // if set to true would help us to not pre generate all of our pages but just most of them\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    })) // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n\n  };\n}\nexport async function getStaticProps(context) {\n  //fetch the data for a single meetup\n  //cannot use react hooks in here\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://antho:QUDf7pd7u6jM@cluster0.zqmklxs.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      selectedMeetup // meetupData: {\n      //   id: meetupId,\n      //   image:\n      //     'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n      //   title: 'First Meetup',\n      //   address: 'Some Streert',\n      //   description: 'some meetup',\n      // },\n\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["/Users/anthonyhadwan/code/AnthonyHad/udemy-react/14-NextJs/next-project/pages/[meetupId]/index.js"],"names":["MongoClient","MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA3B,EAAuCC,OAAvC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AACY;AACjBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ,CAFF,CAML;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAjBK,GAAP;AAmBD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA;AACA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAAEb,IAAAA,GAAG,EAAEQ;AAAP,GAA1B,CAA7B;AAEAf,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACL0B,MAAAA,cADK,CAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AATK;AADF,GAAP;AAaD;AAED,eAAe3B,aAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nfunction MeetupDetails(props) {\n  return (\n    <MeetupDetail\n      image={props.meetupData.image}\n      title={props.meetupData.title}\n      address={props.meetupData.address}\n      description={props.meetupData.description}\n    />\n  );\n}\n\nexport async function getStaticPaths() {\n  //we usually fetch Ids from the database\n  const client = await MongoClient.connect(\n    'mongodb+srv://antho:QUDf7pd7u6jM@cluster0.zqmklxs.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n\n  client.close();\n\n  return {\n    fallback: false, // if set to true would help us to not pre generate all of our pages but just most of them\n    paths: meetups.map((meetup) => ({\n      params: { meetupId: meetup._id.toString() },\n    })),\n\n    // [\n    //   {\n    //     params: {\n    //       meetupId: 'm1',\n    //     },\n    //   },\n    //   {\n    //     params: {\n    //       meetupId: 'm2',\n    //     },\n    //   },\n    // ],\n  };\n}\n\nexport async function getStaticProps(context) {\n  //fetch the data for a single meetup\n  //cannot use react hooks in here\n  const meetupId = context.params.meetupId;\n\n  const client = await MongoClient.connect(\n    'mongodb+srv://antho:QUDf7pd7u6jM@cluster0.zqmklxs.mongodb.net/meetups?retryWrites=true&w=majority'\n  );\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n\n  const selectedMeetup = await meetupsCollection.findOne({ _id: meetupId });\n\n  client.close();\n\n  return {\n    props: {\n      selectedMeetup,\n      // meetupData: {\n      //   id: meetupId,\n      //   image:\n      //     'https://upload.wikimedia.org/wikipedia/commons/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg',\n      //   title: 'First Meetup',\n      //   address: 'Some Streert',\n      //   description: 'some meetup',\n      // },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}